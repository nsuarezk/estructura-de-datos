# estructura-de-datos

vector.h

#pragma once
#define MAX 100


class Vector
{
private:
	int vec[MAX];
	int n;


public:
	Vector(int _n);
	~Vector(void);

	void CargarVector ();
	void ContarVector (int &contposi, int &contnega, int &contcero);
	void EliminarRepetido (int vec2 [MAX],int &m);

};

vector.cpp

#include "StdAfx.h"
#include "Vector.h"
#include <iostream>
#include <conio.h>

using namespace std;

Vector::Vector(int _n)
{
	n = _n;
}


Vector::~Vector(void)
{
}


void Vector::CargarVector ()
{
	for (int i=0 ; i<n ; i++)
	{
		cout << "Ingresa v["<<i<<"] = ";
		cin >> vec [i];
	}
}

void Vector::ContarVector (int &contposi, int &contnega, int &contcero)
{
	contposi = 0;
	contnega = 0;
	contcero = 0;
	for (int i=0 ; i<n ; i++)
	{
		if (vec[i] < 0)
			contnega = contnega + 1;
		else
			if (vec [i] > 0)
				contposi = contposi + 1;
			else 
				contcero = contcero + 1;
	}

}


void Vector::EliminarRepetido (int vec2[MAX], int &m)
{
	int flag = 0, j;
	vec2[0] = vec [0];
	m = 1;
	for (int i=1 ; i<n ; i++)
	{
		for (int j=0 ; j<m ; j++)
			if (vec [i] == vec2 [j])
			{
				flag = 1;
				break;
			}
		if (flag == 0)
		{
			vec2[j] = vec[i];
			m++;
		}
		else
			flag = 0;
	}
}


main


#include "stdafx.h"
#include <iostream>
#include <conio.h>
#include "Vector.h"
#define MAX 100

using namespace std;

void main ()
{
	int num, cposi, cnega, ccero;
	int vecd [MAX], num2;
	do 
	{
		cout << " Ingrese el numero de elementos: ";
		cin >> num;
	}
	while ((num <= 0) || (num > MAX));
	Vector v1 (num); //creando objeto de la clase vector v1
	v1.CargarVector();
	v1.ContarVector(cposi, cnega, ccero);

	cout << " Los positivos son: " << cposi <<endl;
	cout << " Los negativos son: " << cnega <<endl;
	cout << " Los ceros son: " << ccero <<endl;

	v1. EliminarRepetido (vecd, num2);
	for (int i=0 ; i<num2 ; i++)
	{
		cout << "v["<<i<<"] = " << vecd [i];
	}

	getch();

}
